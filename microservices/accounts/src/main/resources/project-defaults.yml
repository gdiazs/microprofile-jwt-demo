# A project defaults for use with MP-JWT auth-method that include additional role mapping
swarm:
  bind:
    address: localhost
  # Example of passing in token verification information via project file
  microprofile:
    jwtauth:
      token:
        issuedBy: "https://server.example.com"
  security:
    security-domains:
      # name matches realm name used with LoginConfig
      jwt-jaspi:
        jaspi-authentication:
          login-module-stacks:
            roles-lm-stack:
              login-modules:
                # This stack performs the token verification and group to role mapping
                - login-module: rm
                  code: org.wildfly.swarm.microprofile.jwtauth.deployment.auth.jaas.JWTLoginModule
                  flag: required
                  module-options:
                    rolesProperties: jwt-roles.properties
          auth-modules:
          # This module integrates the MP-JWT custom authentication mechanism into the web container
            http:
              code: org.wildfly.extension.undertow.security.jaspi.modules.HTTPSchemeServerAuthModule
              module: org.wildfly.extension.undertow
              flag: required
              login-module-stack-ref: roles-lm-stack
  datasources:
    data-sources:
      jdbc-h2ds:
        jndi-name: java:/jdbc/H2DS
        driver-name: driverh2
        connection-url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
        user-name: sa
        password: sa
    jdbc-drivers:
      driverh2:
        driver-class-name: org.h2.Driver
        xa-datasource-name: org.h2.jdbcx.JdbcDataSource
        driver-module-name: com.h2database.h2